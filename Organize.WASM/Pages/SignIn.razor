@page "/signin"
@inherits SignInBase

<div class="sign-form">
    <p class="welcome-text">Hello @(string.IsNullOrEmpty(User.UserName) ? "User": User.UserName) - Today is @Day</p>
    <EditForm EditContext="MyEditContext" OnSubmit="MyOnSubmit">
        @* this built-in component will validate each form field against the Model (i.e. User) attribute annotations *@
        <DataAnnotationsValidator />

        @* @bind-value refers to HTML <input value="..." but, @bind-Value refers to this <InputText value property *@
        @*<InputText type="text" class="sign-input form-control" placeholder="Username" @bind-Value="User.Username" />
            <ValidationMessage For="@(() => User.Username)"></ValidationMessage>*@
        <div class="sign-validation">
            <ValidationInput @bind-Value="@User.UserName"
                             placeholder="Username"
                             Error="@GetError(() => User.UserName)"></ValidationInput>
        </div>

        @*<ValidationInput @bind-Value="@Username"></ValidationInput>*@
        @*<InputText type="password" class="sign-input form-control" placeholder="Password" @bind-Value="User.Password" />
            <ValidationMessage For="@(() => User.Password)"></ValidationMessage>*@
        <div class="sign-validation">
            <ValidationInput type="password"
                             placeholder="Password"
                             @bind-Value="@User.Password"
                             Error="@GetError(() => User.Password)"></ValidationInput>
        </div>
        @* this built-in component will display together all form validation errors *@
        @*<ValidationSummary />*@
        <button class="sign-button btn btn-primary" type="submit">Sign In</button>
    </EditForm>

    <div class="signup">
        @*<a href="@(User.Username != null ? $"/signup?username={User.Username}" : "/signup")">Sign Up</a>*@
        <a href="@(User.UserName != null ? $"/signup/{User.UserName}" : "/signup")">Sign Up</a>
    </div>
</div>
